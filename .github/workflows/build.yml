name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/renovatebot/renovate-approve-bot-bitbucket-cloud
  NODE_VERSION: 14

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
        with:
          fetch-depth: 2

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561 # v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          npm config set scripts-prepend-node-path true
          echo "Node $(node --version)"

      - name: Installing dependencies
        run: npm ci

      - name: Testing
        run: npm run jest --maxWorkers=2 --ci

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
        with:
          fetch-depth: 2

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561 # v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          npm config set scripts-prepend-node-path true
          echo "Node $(node --version)"

      - name: Installing dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  codeql-analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561 # v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          npm config set scripts-prepend-node-path true
          echo "Node $(node --version)"

      - name: Installing dependencies
        run: npm ci

      - name: Initialize CodeQL
        uses: github/codeql-action/init@e095058bfa09de8070f94e98f5dc059531bc6235 # renovate: tag=v1.0.24
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@e095058bfa09de8070f94e98f5dc059531bc6235 # renovate: tag=v1.0.24

  build:
    needs: [codeql-analyze, lint, test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      packages: write
      pull-requests: write

    timeout-minutes: 10

    steps:
      # full checkout for semantic-release
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
        with:
          fetch-depth: 0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561 # v2.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          npm config set scripts-prepend-node-path true
          echo "Node $(node --version)"

      - name: Installing dependencies
        run: npm ci

      - name: Set up QEMU
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # renovate: tag=v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f211e3e9ded2d9377c8cadc4489a4e38014bc4c9 # v1.7.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container images
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # v2.10.0
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push container images
        if: ${{ github.ref == 'refs/heads/main' && env.IMAGE_TAG != '' }}
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # v2.10.0
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          # IMAGE_TAG is set by @semantic-release/exec (see .releaserc file)
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
